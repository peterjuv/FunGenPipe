% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FunGenPipe.R
\name{getColPats2}
\alias{getColPats2}
\title{Get color patterns with names from another column from targets}
\usage{
getColPats2(
  targets,
  colorsFrom = "color_",
  rename = TRUE,
  namesFrom = NULL,
  unique = FALSE,
  pullVar = NULL
)
}
\arguments{
\item{targets}{Table with columns names with a prefix colorsFrom='color_'}

\item{colorsFrom}{String prefix of names of columns with colors, default 'color_'}

\item{rename}{Logical, rename colors using associated variables or variable namesFrom (default) or use existing (possibly missing) names}

\item{namesFrom}{Either NULL for using variables that share suffixes with colors
or a variable from targets that is used for setting names to colors, e.g. HybName}

\item{unique}{If TRUE, returns unique names and associated colors;
Note that colors may be dropped, see the last example}

\item{pullVar}{A variable from targets, e.g. Sex}
}
\value{
Named list of named colors for each variable from targets with an associated color.
Names of variables correspond to color variables w/o colorsFrom prefix, e.g. "VarName" for "color_VarName"
Names of colors correspond to values of an associated variable by default;
alternatively, names are set to values form namesFrom variable.
The lenght of each list is equal to the number of rows;
alternatively, lists are truncated to unique names if unique=TRUE.
If pullVar given, returns a single list of colors for that variable from targets
}
\description{
New implementation allowing for alternative naming using parameter namesFrom
Returns columns from phenoData that start with "color_" and have their suffix in common with another column;
Names of colors are set from the associated column, e.g., tibble(color_Sex = setNames(color_Sex, Sex), ...)
At least 2 columns are required, e.g. Var and color_Var; both
}
\section{TOFIX}{

getColPats2(targets \%>\% select(-color_BatchIP), unique=TRUE, colorsFrom$
Error:
}

\examples{
\dontrun{
(targets <- tibble(color_aa=c(1,1,2), color_bb=c("3"=3,"4"=4,"4"=4), aa=c(11,11,22), bb=c(33,33,44), cc=c(55,66,55)))
names(targets$color_aa)
names(targets$color_bb)
getColPats2(targets)
# using namesFrom
getColPats2(targets, namesFrom=NULL)
getColPats2(targets, namesFrom=cc)
cc <- NULL
getColPats2(targets, namesFrom=cc)
d <- NULL
getColPats2(targets, namesFrom=d)
# using unique
getColPats2(targets, unique=TRUE)
getColPats2(targets, namesFrom=cc, unique=TRUE)
# using preset names, possibly missing
getColPats2(targets, rename=FALSE)
}
}
